<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dados de <%= municipio %></title>
    <script src="/normalizarTexto.js" defer></script> 
    <script src="/buscaMunicipios.js" defer></script>
    <script src="/formatarDadosDaTabela.js" defer></script>
    <script src="/botaoDeAjuda.js" defer></script>
    <script src="/botaoTopo.js" defer></script>
    <link rel="stylesheet" href="/styles.css">
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" />
</head>
<body id="top">
    <div class="container">
        <a href="/" class="link-voltar">Voltar à pagina anterior</a>
        <br>
        <br>
        <h1><%= municipio %></h1>
        <br>
        <h2>Código do IGBE: <em><%= codigo %></em></h2>
        <h2>Tipo de Bacia: <em><%= bacia %></em></h2>
        <br>
        <div id="grafico-container" style="width: 100%; height: 100vh;">
            <canvas id="grafico"></canvas>
        </div>
        <br>

        <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels"></script>
        <script>
            const dadosGrafico = <%- JSON.stringify(dados) %>;

            const rotulos = [...new Set(dadosGrafico.map(item => item.NOME))].toSorted((a,b) => a.localeCompare(b, 'pt-BR'));
            const anos = [...new Set(dadosGrafico.map(item => item.ANO))].toSorted();

            const datasets = anos.map((ano, index) => {
                const dadosAnuais = rotulos.map(rotulo => {
                    const resultado = dadosGrafico.find(item => item.NOME === rotulo && item.ANO === ano);
                    return resultado ? resultado["AREA (HA)"] : 0;
                });

                return {
                    label: `Ano ${ano}`,
                    data: dadosAnuais,
                    backgroundColor: `rgba(${50 + index * 100}, ${100 + index * 50}, 200, 0.8)`,
                    borderColor: `rgba(${50 + index * 100}, ${100 + index * 50}, 200, 1)`,
                    borderWidth: 1,
                    barThickness: Math.max(10, 30 - rotulos.length)
                };
            });

            const grafico = document.getElementById('grafico');

            const ctx = grafico.getContext('2d');
            const chart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: rotulos,
                    datasets: datasets
                },
                plugins: [ChartDataLabels],
                options: {
                    indexAxis: 'y',
                    responsive: true,
                    maintainAspectRatio: false,
                    layout: {
                        padding: {
                            right: 60
                        }
                    },
                    plugins: {
                        datalabels: {
                            anchor: 'end',
                            align: 'right',
                            color: '#000',
                            formatter: (value) => value.toFixed(2).replace('.', ','),
                            font: {
                                size: 9 + Math.floor(window.innerWidth / 1920 * 3)
                            },
                        },
                        title: {
                            display: true,
                            text: 'Áreas por Nome e Separadas por Ano',
                            font: {
                                size: 12 + Math.floor(window.innerWidth / 1920 * 12),
                                weight: 'bold'
                            },
                            color: '#333',
                            padding: {
                                top: 10,
                                bottom: 10
                            }
                        },
                        legend: {
                            display: true,
                            position: 'top',
                            labels: {
                                font: {
                                    size: 10 + Math.floor(window.innerWidth / 1920 * 2)
                                }
                            }
                        },
                        tooltip: {
                            callbacks: {
                                label: function(tooltipItem) {
                                    const year = datasets[tooltipItem.datasetIndex].label.split(' ')[1];
                                    const value = tooltipItem.raw;
                                    return `Ano: ${year}, Área (ha): ${value}`;
                                }
                            }
                        }
                    },
                    scales: {
                        x: {
                            stacked: false,
                            title: {
                                display: true,
                                text: 'Áreas (ha)'
                            },
                            ticks: {
                                padding: 5
                            }
                        },
                        y: {
                            beginAtZero: true,
                            title: {
                                display: true,
                                text: 'Nome'
                            },
                            categoryPercentage: 0.9,
                            barPercentage: 0.8,
                            ticks: {
                                font: {
                                    size: 9 + Math.floor(window.innerWidth / 1920 * 3)
                                },
                                padding: 15
                            }
                        }
                    }
                }
            });
        </script>
        
        <p>Para comparar os dados de <%= municipio %> com outro município, digite o nome do município e selecione a sua opção:</p>
        <br>
        <input type="text" id="buscaMunicipio" placeholder="Digite o nome do município...">
        <ul id="listaMunicipios" class="lista-municipios" style="display:none;"></ul>
        <br>
        <p>Ou, se preferir, procure o município no mapa abaixo:</p>
        <br>
        <div id="map"></div>
        <br>
        <table>
            <thead>
                <tr>
                    <th>Nome</th>
                    <th>Ano</th>
                    <th>Área (ha)</th>
                    <th>Alteração (Valor Absoluto, em ha)</th>
                    <th>Alteração (Valor Relativo, em %)</th>
                </tr>
            </thead>
            <tbody>
                <% dados.forEach(dado => { %>
                    <tr>
                        <td><%= dado["NOME"] %></td>
                        <td><%= dado["ANO"] %></td>
                        <td name="area"><%= dado["AREA (HA)"] %></td>
                        <td class="comparacao"><%= dado["ABSOLUTO"] %></td>
                        <td class="comparacao"><%= dado["RELATIVO"] %></td>
                    </tr>
                <% }) %>
            </tbody>
        </table>
        <br>

        <button id="help-button" class="help-button">?</button>
        <div id="balloon" class="balloon">
            <div id="balloon-close" class="balloon-close">x</div>
            <p>Deseja comparar os dados deste município com os dados de outro município? Comece a digitar o nome do município na caixa de pesquisa e verá uma lista de sugestões. Quando encontrar o município desejado, basta selecioná-lo.<br><br>Ou se preferir, utilize o mapa da região da bacia hidrográfica. Clique ou toque sobre o município desejado e verá um balão com o nome do mesmo, e o link para acessar os dados.</p>
        </div>

        <a href="#top" class="back-to-top">
            <img src="/images/topo.png" alt="Volte ao Topo da Página" />
        </a>
    </div>

    <script>
        window.municipios = <%- JSON.stringify(municipios) %>;
    </script>

    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>
    <script>
        var municipiosComCodigo = <%- JSON.stringify(municipiosComCodigo) %>;

        var objetoMunicipiosComCodigo = {};
        municipiosComCodigo.forEach(function(municipio) {
            objetoMunicipiosComCodigo[municipio.CODIGO] = municipio.MUNICIPIO;
        });

        fetch('/data/MunicipiosBacia.geojson')
            .then(response => response.json())
            .then(geojson => {
                var bounds = L.geoJSON(geojson).getBounds();
                var map = L.map('map', {
                    scrollWheelZoom: false,
                    zoomControl: true,
                    dragging: true,
                    dragging: !L.Browser.mobile,
                    touchZoom: true,
                    maxBounds: bounds,
                    maxBoundsViscosity: 1.0,
                });

                map.fitBounds(bounds);

                L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                    attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
                }).addTo(map);

                L.geoJSON(geojson, {
                    onEachFeature: function (feature, layer) {
                        var codigoMapa = feature.properties.Codigo;
                        layer.on('click', function (e) {
                            var nomeDoMunicipio = objetoMunicipiosComCodigo[codigoMapa];
                            if (nomeDoMunicipio) {
                                if (codigoMapa != <%= codigo %>) {
                                    var url = window.location.pathname + `/${nomeDoMunicipio}`;
                                    layer.bindPopup(`<a href="${url}">${nomeDoMunicipio}</a>`);
                                } else {
                                    layer.bindPopup(`${nomeDoMunicipio}`);
                                }
                            } else {
                                layer.bindPopup('Nome do município não encontrado.').openPopup();
                            }
                        });
                    }
                }).addTo(map);

            })
            .catch(err => console.error('Erro ao carregar o GeoJSON: ', err));
    </script>

</body>
</html>
